{"version":3,"sources":["./src/app/encryption-credential/encryption-credential.module.ts","./src/app/encryption-credential/encryption-credential.routing.ts","./src/app/encryption-credential/encryption-credential.service.ts","./src/app/encryption-credential/encryption-validate/encryption-validate.component.css","./src/app/encryption-credential/encryption-validate/encryption-validate.component.html","./src/app/encryption-credential/encryption-validate/encryption-validate.component.ts","./src/app/encryption-credential/encryption/encryption.component.css","./src/app/encryption-credential/encryption/encryption.component.html","./src/app/encryption-credential/encryption/encryption.component.ts","./src/app/encryption-credential/help/encryption_help.component.css","./src/app/encryption-credential/help/encryption_help.component.html","./src/app/encryption-credential/help/encryption_help.component.ts","./src/app/encryption-credential/help/model/HelpModel.ts"],"names":[],"mappings":"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","file":"encryption-credential.module.chunk.js","sourcesContent":["import {NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {HttpModule} from '@angular/http';\nimport {DataTableModule, SelectButtonModule, SharedModule, BlockUIModule, PanelModule, GrowlModule, ButtonModule, DialogModule, MessagesModule, TooltipModule, InputTextareaModule, DropdownModule} from 'primeng/primeng';\nimport {EncryptionCredentialService} from './encryption-credential.service';\nimport {EncryptionCredentialRoutingModule} from './encryption-credential.routing';\nimport {EncryptionComponent} from './encryption/encryption.component';\nimport { EncryptionValidateComponent } from './encryption-validate/encryption-validate.component';\nimport { HelpComponent} from './help/encryption_help.component';\n\n\n\n\n@NgModule({\n    imports: [\n        HttpModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SelectButtonModule,\n        DataTableModule,\n        SharedModule,\n        GrowlModule,\n        ButtonModule,\n        BlockUIModule,\n        PanelModule,\n        EncryptionCredentialRoutingModule,\n        TooltipModule,\n        InputTextareaModule,\n        DialogModule,\n        MessagesModule,\n        DropdownModule\n\n\n\n\n\n    ],\n    declarations: [EncryptionComponent, EncryptionValidateComponent, HelpComponent],\n    providers: [\n        EncryptionCredentialService\n    ]\n})\nexport class EncryptionCredentialModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/encryption-credential.module.ts","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {EncryptionComponent} from './encryption/encryption.component';\nimport {EncryptionValidateComponent} from './encryption-validate/encryption-validate.component';\n\nconst routes: Routes = [\n    {\n        path: 'generate',\n        component: EncryptionComponent\n    },\n    {\n        path: 'validate',\n        component: EncryptionValidateComponent\n    }\n\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class EncryptionCredentialRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/encryption-credential.routing.ts","import {Http, Response, Headers} from '@angular/http';\nimport {Observable} from 'rxjs/Rx';\nimport {Injectable} from '@angular/core';\nimport {endpointServer} from '../../environments/environment';\nimport {GlobalService} from '../global.service';\n\n@Injectable()\nexport class EncryptionCredentialService {\n    private baseUrl: string = endpointServer.basePath + '/rest';\n\n    constructor(private http: Http, public globalService: GlobalService) {}\n\n    validateCredntial(data) {\n        return this.globalService.post(`${this.baseUrl}/validate-token-pdf`, data);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/encryption-credential.service.ts","module.exports = \".danger_marker {\\r\\n  color:red;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.region{\\r\\n  height: 150px;\\r\\n  width: 300px;\\r\\n\\r\\n\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/encryption-credential/encryption-validate/encryption-validate.component.css\n// module id = ./src/app/encryption-credential/encryption-validate/encryption-validate.component.css\n// module chunks = encryption-credential.module","module.exports = \"<h2>Validador de credenciales</h2>\\n<div class=\\\"container theme-showcase\\\" role=\\\"main\\\"></div>\\n<form [formGroup]=\\\"validateForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"validateCredential()\\\">\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label>Clave</label>\\n                <span class=\\\"danger_marker\\\">*</span>\\n                <app-encryption-help [ayuda]=\\\"ayudaClave\\\"></app-encryption-help>\\n                <input pInputText type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"clave\\\"\\n                       placeholder=\\\"Ingresa la clave del PDF\\\" pTooltip=\\\"Ingresa la clave del PDF\\\"/>\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\n                     *ngIf=\\\"!validateForm.controls['clave'].valid&&validateForm.controls['clave'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Campo obligatorio\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label>Folio</label>\\n                <span class=\\\"danger_marker\\\">*</span>\\n                <app-encryption-help [ayuda]=\\\"ayudaFolio\\\"></app-encryption-help>\\n                <input pInputText type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"folio\\\"\\n                       placeholder=\\\"Ingresa la clave del PDF\\\" pTooltip=\\\"Ingresa la clave del PDF\\\"/>\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\n                     *ngIf=\\\"!validateForm.controls['folio'].valid&&validateForm.controls['folio'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Campo obligatorio\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label>Signature</label>\\n                <span class=\\\"danger_marker\\\">*</span>\\n                <app-encryption-help [ayuda]=\\\"ayudaSignature\\\"></app-encryption-help>\\n                <textarea class=\\\"form-control\\\" rows=\\\"5\\\" pInputTextarea autoResize=\\\"autoResize\\\"\\n                          (keyup)=\\\"removeBreakLine($event)\\\" formControlName=\\\"signature\\\"\\n                          pTooltip=\\\"Ingresa la cadena de la firma digital\\\"></textarea>\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\n                     *ngIf=\\\"!validateForm.controls['signature'].valid&&validateForm.controls['signature'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Campo obligatorio\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"{'has-error':formErrors.usuarioM2k}\\\">\\n                <label class=\\\"control-label\\\" for=\\\"usuarioM2k\\\">Usuario Mobile</label>\\n                <span class=\\\"danger_marker\\\">*</span>\\n                <app-encryption-help [ayuda]=\\\"ayudaUsr\\\"></app-encryption-help>\\n                <input pInputText type=\\\"text\\\" class=\\\"form-control\\\" required\\n                [ngModel]=\\\"usuarioM2k\\\"  formControlName=\\\"usuarioM2k\\\"\\n                       placeholder=\\\"Ingresa el usuario Mobile\\\" pTooltip=\\\"Ingresa el usuario Mobile\\\"/>\\n                       <!-- Mensaje de Error de Validación-->\\n                       <div class=\\\"alert alert-danger noPadding\\\" *ngIf=\\\"formErrors.usuarioM2k\\\">{{formErrors.usuarioM2k}}</div>\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\n                     *ngIf=\\\"!validateForm.controls['usuarioM2k'].valid&&validateForm.controls['usuarioM2k'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Campo obligatorio\\n                </div>\\n              </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"form-group col-md-6\\\" style=\\\"vertical-align:middle right;padding-bottom: 30px;\\\">\\n              <label>Seleccione la region de ejecución.</label>\\n              <span class=\\\"danger_marker\\\">*</span>\\n              <app-encryption-help [ayuda]=\\\"ayudaRegion\\\"></app-encryption-help>\\n              <p-dropdown [options]=\\\"regionM2k\\\" [style]=\\\"{'width':'530px'}\\\"   formControlName=\\\"regionM2k\\\"\\n              (onChange)=\\\"cambioRegion()\\\"></p-dropdown>\\n              <div class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\n                             *ngIf=\\\"!validateForm.controls['regionM2k'].valid&&validateForm.controls['regionM2k'].dirty\\\">\\n                            <i class=\\\"fa fa-close\\\"></i>\\n                        </div>\\n            </div>\\n           </div>\\n\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-9\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!validateForm.valid\\\">Validar</button>\\n          </div>\\n        </div>\\n\\n\\n    </div>\\n\\n</form>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/encryption-credential/encryption-validate/encryption-validate.component.html\n// module id = ./src/app/encryption-credential/encryption-validate/encryption-validate.component.html\n// module chunks = encryption-credential.module","import {Component, OnInit, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {EncryptionCredentialService} from '../encryption-credential.service';\nimport {Validators, FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {AlertService} from '../../alert.service';\nimport {endpointServer} from '../../../environments/environment';\nimport { SelectItem } from 'primeng/primeng';\nimport {Help} from '../help/model/HelpModel';\nimport {GlobalService} from '../../global.service';\n\n\n\n\n\n\n@Component({\n    selector: 'app-encryption-validate',\n    templateUrl: './encryption-validate.component.html',\n    styleUrls: ['./encryption-validate.component.css']\n})\nexport class EncryptionValidateComponent implements OnInit {\n    private claveV: string;\n    private usuarioV: string;\n    private folioV: string;\n    private signatureV: string;\n    public usuarioM2k: String;\n    public regionM2k: SelectItem[];\n    public selectOption: any;\n    private prodEnvChecked: boolean = false;\n    private enviromentSelected: string;\n    public ayudaUsr: Help;\n    public ayudaClave: Help;\n    public ayudaFolio: Help;\n    public ayudaSignature: Help;\n    public ayudaRegion: Help;\n    public validateForm: FormGroup;\n\n    constructor(private service: EncryptionCredentialService,\n        private alertService: AlertService,\n        private fb: FormBuilder, private globalService: GlobalService) {}\n\n    ngOnInit() {\n        this.validateForm = this.fb.group({\n            'clave': new FormControl('', Validators.required),\n            'folio': new FormControl('', Validators.required),\n            'signature': new FormControl('', Validators.required),\n            'usuarioM2k' : new FormControl ('', Validators.required),\n            'regionM2k': new FormControl ('', Validators.required)\n        });\n\n        this.cargarAyuda();\n\n        if (this.prodEnvChecked == true) {\n          this.enviromentSelected = \"Producción\";\n        } else {\n          this.enviromentSelected = \"Desarrollo\";\n        }\n\n        this.regionM2k = [\n          {label: 'R01', value: 'R01'},\n          {label: 'R02', value: 'R02'},\n          {label: 'R03', value: 'R03'},\n          {label: 'R04', value: 'R04'},\n          {label: 'R05', value: 'R05'},\n          {label: 'R06', value: 'R06'},\n          {label: 'R07', value: 'R07'},\n          {label: 'R08', value: 'R08'},\n          {label: 'R09', value: 'R09'},\n      ];\n\n      this.selectOption = 1;\n\n    }\n\n    validateCredential() {\n      this.service.validateCredntial(this.validateForm.value).subscribe((p) => {\n        if(p.json.message){\n            this.alertService.push({severity: 'error', summary: 'Mobile2000', detail: p.json.message});\n          } else {\n            console.log(p.json.value);\n\n          if (p.json.value) {\n              this.alertService.push({severity: 'success', summary: 'Credenciales válidas', detail: \"Las credenciales fueron generadas de una fuente confiable\"});\n          } else {\n              this.alertService.push({severity: 'warn', summary: 'Credenciales inválidas', detail: \"Los datos introducidos son apócrifos\"});\n          }\n        }\n\n      });\n    }\n\n    checkSession() {\n\n    }\n\n    cargarAyuda() {\n      this.ayudaUsr = new Help('Usuario Mobile','Usuario registrado en M2K con autoridad para ejecutar el componente en Producción.');\n      this.ayudaClave = new Help('Clave','Contraseña encriptada: Cadena de caracteres generada en el PDF a un lado de la etiqueta Clave.');\n      this.ayudaFolio = new Help('Folio','Folio de Solicitud: Cadena de caracteres generada en el PDF a un lado de la etiqueta Folio.');\n      this.ayudaSignature = new Help('Signature','Firma de seguridad: Cadena de caracteres generada en el PDF bajo la etiqueta Signature.');\n      this.ayudaRegion = new Help('Region','Opciones de region: Cambio de region operativo a nivel nacional.');\n\n  }\n\n\n\n    removeBreakLine(event) {\n\n        if (this.validateForm.controls['signature'].value != undefined) {\n            this.validateForm.controls['signature'].patchValue(this.validateForm.controls['signature'].value.replace(/(\\r?\\n|\\r)/gm, \"\").replace(\" \", \"\"));\n        }\n\n    }\n\n    cambioRegion() {\n      console.log(this.validateForm.controls['regionM2k'].value);\n    }\n\n    formErrors = {\n      'programaInput' : '',\n      'transaccionInput' : '',\n      'cadenaIgtocInput' : '',\n      'usuarioM2k' : '',\n      'regionM2k':'',\n    };\n\n    validationMessages = {\n      'usuarioM2k' : {\n      'required': 'El usuario MOBILE es REQUERIDO.',\n      'minlength': 'El usuario MOBILE debe tener al menos 1 caractér.',\n      'maxlength': 'El usuario MOBILE debe tener máximo 10 caracteres.',\n\n    },\n      'regionM2k' : {\n      'required': 'Cambio de region.',\n  },\n\n\n};\n\n\n\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/encryption-validate/encryption-validate.component.ts","module.exports = \".danger_marker {\\r\\n  color:red;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/encryption-credential/encryption/encryption.component.css\n// module id = ./src/app/encryption-credential/encryption/encryption.component.css\n// module chunks = encryption-credential.module","module.exports = \"<h2>Generación de credenciales WS-M2K</h2>\\n\\n<form [formGroup]=\\\"generateForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"generateCredential()\\\">\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label>Contraseña M2K</label>\\n                <app-encryption-help [ayuda]=\\\"ayudaPasswordM2k\\\"></app-encryption-help>\\n                <span class=\\\"danger_marker\\\">*</span>\\n                <input pInputText type=\\\"password\\\" onkeypress=\\\"mayus(this);\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"\\n                       maxlength=\\\"8\\\"\\n                       placeholder=\\\"Ingresa contraseña de Mobile 2000\\\" pTooltip=\\\"Ingresa contraseña de Mobile 2000\\\"/>\\n                <div class=\\\"ui-message ui-messages-error ui-corner-all\\\"\\n                     *ngIf=\\\"!generateForm.controls['password'].valid&&generateForm.controls['password'].dirty\\\">\\n                    <i class=\\\"fa fa-close\\\"></i>\\n                    Debe tener al menos 6 caracteres de la A-Z Mayuscula, incluidos números.\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"loading\\\" *ngIf=\\\"loading\\\">\\n          <img src=\\\"../../assets/images/descarga\\\" />\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-1\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!generateForm.valid\\\">Generar</button>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/encryption-credential/encryption/encryption.component.html\n// module id = ./src/app/encryption-credential/encryption/encryption.component.html\n// module chunks = encryption-credential.module","import {Component, OnInit} from '@angular/core';\nimport {Validators, FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {AlertService} from '../../alert.service';\nimport {endpointServer} from '../../../environments/environment';\nimport {Help} from '../help/model/HelpModel';\n\n\n\n@Component({\n    selector: 'app-encryption',\n    templateUrl: './encryption.component.html',\n    styleUrls: ['./encryption.component.css']\n})\nexport class EncryptionComponent implements OnInit {\n    private password: string;\n    public ayudaPasswordM2k: Help;\n    public loading: boolean;\n    private generateForm: FormGroup;\n\n    constructor(private alertService: AlertService, private fb: FormBuilder) {}\n\n    ngOnInit() {\n\n        this.generateForm = this.fb.group({\n            'password': new FormControl ('', Validators.required,Validators.maxLength[8]),\n        });\n\n        this.cargarAyuda();\n        this.loading=true;\n\n        if(!this.generateCredential){\n          alert(\"error en el servidor\");\n        }else{\n          this.loading=false;\n        }\n    }\n    generateCredential() {\n        openWindowWithPostRequest(endpointServer.basePath + '/rest/generate-token-pdf/', this.generateForm.controls['password'].value);\n    }\n\n    cargarAyuda() {\n      this.ayudaPasswordM2k = new Help('Contraseña Mobile','Contraseña registrado en M2K con autoridad para ejecutar el componente en Producción');\n    }\n}\n\nfunction openWindowWithPostRequest(endpoint, password) {\n    var winName = 'MyWindow';\n    var winURL = endpoint;\n    var windowoption = 'resizable=yes,height=600,width=800,location=0,menubar=0,scrollbars=1';\n    var params = {'password': password};\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"method\", \"post\");\n    form.setAttribute(\"action\", winURL);\n    form.setAttribute(\"target\", winName);\n    for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n            var input = document.createElement('input');\n            input.type = 'hidden';\n            input.name = i;\n            input.value = params[i];\n            form.appendChild(input);\n        }\n    }\n    document.body.appendChild(form);\n    window.open('', winName, windowoption);\n    form.target = winName;\n    form.submit();\n    document.body.removeChild(form);\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/encryption/encryption.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/encryption-credential/help/encryption_help.component.css\n// module id = ./src/app/encryption-credential/help/encryption_help.component.css\n// module chunks = encryption-credential.module","module.exports = \"<p-dialog header=\\\"Ayuda!\\\" [(visible)]=\\\"displayFormHelp\\\" modal=\\\"modal\\\" width=\\\"400\\\"\\n         [responsive]=\\\"true\\\" [resizable]=\\\"false\\\" [draggable]=\\\"false\\\" [closable]=\\\"true\\\">\\n\\n         <h2>Diccionario de Ayuda</h2>\\n         <span style=\\\"max-width: 50px;color:blue;\\\"><i class=\\\"fa fa-question-circle-o\\\" aria-hidden=\\\"true\\\"></i></span>\\n         <label>Definición del significado de los campos de la pantalla.</label>\\n         <br/>\\n         <br/>\\n         <ul>\\n            <li *ngFor=\\\"let help of valoresAyuda\\\" style=\\\"text-align: left\\\"><b>{{help.clave}}:</b> {{help.valor}}</li>\\n         </ul>\\n\\n        <p-footer>\\n            <button style=\\\"float:right\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"cancelDialog()\\\" label=\\\"Salir\\\" class=\\\"ui-button-info\\\"></button>\\n        </p-footer>\\n</p-dialog>\\n<span style=\\\"color:blue;float: right;\\\">\\n<i class=\\\"fa fa-question-circle-o\\\" aria-hidden=\\\"true\\\"\\n          style=\\\"cursor:pointer;\\\" (click)=\\\"cargarAyuda()\\\" pTooltip=\\\"Ayuda\\\" tooltipPosition=\\\"top\\\"></i>\\n</span>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/encryption-credential/help/encryption_help.component.html\n// module id = ./src/app/encryption-credential/help/encryption_help.component.html\n// module chunks = encryption-credential.module","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';\nimport { Component, OnInit, ElementRef, ViewChild, Input } from '@angular/core';\nimport { endpointServer } from 'environments/environment';\nimport {ViewEncapsulation} from '@angular/core';\nimport {FormGroup, AbstractControl, FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {NgForm} from '@angular/forms';\nimport {Help} from '../help/model/HelpModel';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-encryption-help',\n  templateUrl: './encryption_help.component.html',\n  styleUrls: ['./encryption_help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  @Input() ayuda: Help;\n  private  subscription: Subscription;\n  public   displayFormHelp: boolean;\n  private valoresAyuda: Help[]=[];\nconstructor() { }\n\nngOnInit(): void {\n  this.displayFormHelp = false;\n}\n\ncargarAyuda() {\n  this.valoresAyuda=[];\n  this.valoresAyuda.push(this.ayuda);\n  this.displayFormHelp = true;\n  }\n\ncancelDialog() {\n  this.displayFormHelp = false;\n}\n\nsetValoresAyuda(ayuda: Help[]) {\n  this.valoresAyuda = ayuda;\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/help/encryption_help.component.ts","export class Help {\r\n    constructor(\r\n        public clave: String,\r\n        public valor: String,\r\n    ) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/encryption-credential/help/model/HelpModel.ts"],"sourceRoot":"webpack:///"}