{"version":3,"sources":["./src/app/monitor-omega/model/Cics.ts","./src/app/monitor-omega/model/CicsThread.ts","./src/app/monitor-omega/model/OmegaData.ts","./src/app/monitor-omega/model/PropiedadesMonitorOmega.ts","./src/app/monitor-omega/model/ReportePantallaOmega.ts","./src/app/monitor-omega/monitor-omega.module.ts","./src/app/monitor-omega/monitor-omega.routing.ts","./src/app/monitor-omega/monitor-omega.service.ts","./src/app/monitor-omega/monitor-omega/monitor-omega.component.css","./src/app/monitor-omega/monitor-omega/monitor-omega.component.html","./src/app/monitor-omega/monitor-omega/monitor-omega.component.ts","./src/app/monitor-omega/scripts/dataTableFunctions.ts"],"names":[],"mappings":"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","file":"monitor-omega.module.chunk.js","sourcesContent":["export class Cics {\r\n  constructor(\r\n    public cicsRels: string,\r\n    public jobName: string,\r\n    public totalCpu: string,\r\n    public db2Cpu: string,\r\n    public pThrdMax: string,\r\n    public activeThreads: string,\r\n    public commitRateSec: string,\r\n    public roCommitRateSec: string,\r\n    public alertRaised: boolean\r\n  ) {}\r\n\r\n  static getNewInstance(): Cics {\r\n    return new Cics('', '', '', '', '', '', '', '', false);\r\n  }\r\n}\r\n\r\nexport function toCics(r: any): Cics {\r\n  let cicsThread = <Cics>({\r\n    cicsRels: r.cicsRels,\r\n    jobName: r.jobName,\r\n    totalCpu: r.totalCpu,\r\n    db2Cpu: r.db2Cpu,\r\n    pThrdMax: r.pThrdMax,\r\n    activeThreads: r.activeThreads,\r\n    commitRateSec: r.commitRateSec,\r\n    roCommitRateSec: r.roCommitRateSec,\r\n    fechaUpdate: new Date(r.fechaUpdate),\r\n    alertRaised: r.alertRaised\r\n  });\r\n  return cicsThread;\r\n}\r\n\r\nexport function toCicsList(r: any): Cics[] {\r\n  let cicsThreadList: Cics[] = [];\r\n  if (r) {\r\n    cicsThreadList = r.map(toCics);\r\n  }\r\n  return cicsThreadList;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/model/Cics.ts","export class CicsThread {\r\n  constructor(\r\n    public elapsed: string,\r\n    public planName: string,\r\n    public tran: string,\r\n    public cpu: string,\r\n    public status: string,\r\n    public getPg: string,\r\n    public update: string,\r\n    public commit: string,\r\n    public jobName: string,\r\n    public region: string,\r\n    public transaccion: string,\r\n    public threadType: number,\r\n    public elapsedTime: number,\r\n    public pantallaM2k: string,\r\n  ) {}\r\n\r\n  static getNewInstance(): CicsThread {\r\n    return new CicsThread('', '', '', '', '', '', '', '', '', '', '', 0, 0.0, '');\r\n  }\r\n}\r\n\r\nexport function toCicsThread(r: any): CicsThread {\r\n  let cicsThreadSummary = <CicsThread>({\r\n    elapsed: r.elapsed,\r\n    planName: r.planName,\r\n    tran: r.tran,\r\n    cpu: r.cpu,\r\n    status: r.status,\r\n    getPg: r.getPg,\r\n    update: r.update,\r\n    commit: r.commit,\r\n    jobName: r.jobName,\r\n    region: r.region,\r\n    transaccion: r.transaccion,\r\n    threadType: r.threadType,\r\n    elapsedTime: r.elapsedTime,\r\n    pantallaM2k: r.pantallaM2k\r\n  });\r\n  return cicsThreadSummary;\r\n}\r\n\r\nexport function toCicsThreadList(r: any): CicsThread[] {\r\n  let cicsThreadSummaryList = r.map(toCicsThread);\r\n  return cicsThreadSummaryList;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/model/CicsThread.ts","import {Cics, toCicsList} from './Cics';\r\nimport {CicsThread, toCicsThreadList} from './CicsThread';\r\n\r\nexport class OmegaData {\r\n  constructor (\r\n    public fechaUpdate: Date,\r\n    public listCics: Cics[],\r\n    public listCicsThread: CicsThread[]\r\n  ){}\r\n\r\n  static getNewInstance(): OmegaData {\r\n    return new OmegaData(new Date(), [], []);\r\n  }\r\n}\r\n\r\nexport function toOmegaData(r: any): OmegaData {\r\n  let response: OmegaData = OmegaData.getNewInstance();\r\n  if(r) {\r\n    response = <OmegaData>({\r\n      fechaUpdate: new Date(r.fechaUpdate),\r\n      listCics: toCicsList(r.listCics),\r\n      listCicsThread: toCicsThreadList(r.listCicsThread)\r\n    });\r\n  }\r\n  return response;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/model/OmegaData.ts","export class PropiedadesMonitorOmega {\r\n  constructor(\r\n    public intervaloRefrescado: number,\r\n    public umbralAlertas: number,\r\n    public monitorOn: boolean,\r\n    public correosAlerta: string,\r\n    public correosAlertaError: string,\r\n    public maxCpu: number\r\n  ) {}\r\n\r\n  static getNewInstance(): PropiedadesMonitorOmega {\r\n    return new PropiedadesMonitorOmega(0, 0.0, false, '', '', 0.0);\r\n  }\r\n}\r\n\r\nexport function mapPropiedades(response: any): PropiedadesMonitorOmega {\r\n  let responseJson = response.json();\r\n  let propiedades: PropiedadesMonitorOmega;\r\n  if (responseJson) {\r\n    propiedades = <PropiedadesMonitorOmega>({\r\n      intervaloRefrescado: responseJson.intervaloRefrescado,\r\n      umbralAlertas: responseJson.umbralAlertas,\r\n      maxCpu: responseJson.maxCpu\r\n    });\r\n  }\r\n  return propiedades;\r\n}\r\n\r\nexport function toPropiedadesMonitorOmega(r: any): PropiedadesMonitorOmega {\r\n  let porpiedadesMonitorOmega = <PropiedadesMonitorOmega>({\r\n    intervaloRefrescado: r.intervaloRefrescado,\r\n    umbralAlertas: r.umbralAlertas,\r\n    monitorOn: r.monitorOn,\r\n    correosAlerta: r.correosAlerta,\r\n    correosAlertaError: r.correosAlertaError,\r\n    maxCpu: r.maxCpu\r\n  });\r\n  return porpiedadesMonitorOmega;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/model/PropiedadesMonitorOmega.ts","import {OmegaData, toOmegaData} from './OmegaData';\r\nimport {PropiedadesMonitorOmega, toPropiedadesMonitorOmega} from './PropiedadesMonitorOmega';\r\n\r\nexport class ReportePantallaOmega {\r\n  constructor(\r\n    public lastUpdate: Date,\r\n    public alertsCount: number,\r\n    public omegaData: OmegaData,\r\n    public propiedadesMonitorOmega: PropiedadesMonitorOmega\r\n  ) {}\r\n\r\n  static getNewInstance(): ReportePantallaOmega {\r\n    return new ReportePantallaOmega(new Date(), 0, OmegaData.getNewInstance(), PropiedadesMonitorOmega.getNewInstance());\r\n  }\r\n}\r\n\r\nexport function mapPantalla(response: any): ReportePantallaOmega {\r\n  let pantalla: ReportePantallaOmega = ReportePantallaOmega.getNewInstance();\r\n  let responseJson = response.json();\r\n  if (responseJson) {\r\n    pantalla = <ReportePantallaOmega>({\r\n      lastUpdate: responseJson.lastUpdate,\r\n      alertsCount: responseJson.alertsCount,\r\n      omegaData: toOmegaData(responseJson.omegaData),\r\n      propiedadesMonitorOmega: toPropiedadesMonitorOmega(responseJson.propiedadesMonitorOmega)\r\n    });\r\n  }\r\n  return pantalla;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/model/ReportePantallaOmega.ts","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { DataTableModule, SharedModule, BlockUIModule, PanelModule, GrowlModule, ButtonModule, SpinnerModule,\n         TooltipModule, DialogModule, GalleriaModule } from 'primeng/primeng';\nimport { MonitorOmegaService } from './monitor-omega.service';\nimport { MonitorOmegaRoutingModule } from './monitor-omega.routing';\nimport { MonitorOmegaComponent } from './monitor-omega/monitor-omega.component';\nimport { HelpModule } from '../help/help.module';\n\n@NgModule({\n  imports: [\n    HttpModule,\n    CommonModule,\n    FormsModule,\n    DataTableModule,\n    SharedModule,\n    BlockUIModule,\n    PanelModule,\n    GrowlModule,\n    ButtonModule,\n    SpinnerModule,\n    TooltipModule,\n    DialogModule,\n    GalleriaModule,\n    MonitorOmegaRoutingModule,\n    HelpModule\n  ],\n  declarations: [MonitorOmegaComponent],\n  providers: [\n    MonitorOmegaService\n  ]\n})\nexport class MonitorOmegaModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/monitor-omega.module.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MonitorOmegaComponent } from './monitor-omega/monitor-omega.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MonitorOmegaComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class MonitorOmegaRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/monitor-omega.routing.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { endpointServer } from '../../environments/environment';\nimport { GlobalService } from '../global.service';\nimport { AuthService } from '../app.service';\nimport { ReportePantallaOmega, mapPantalla } from './model/ReportePantallaOmega';\nimport { PropiedadesMonitorOmega, mapPropiedades } from './model/PropiedadesMonitorOmega';\n\n@Injectable()\nexport class MonitorOmegaService {\n  private baseUrl: string = endpointServer.basePath + '/rest';\n  private restUrl: string = this.baseUrl + '/monitor-omega';\n  constructor(private http: Http, public globalService: GlobalService, public authService: AuthService) {}\n\n  public getEndPoint(): string {\n    return endpointServer.basePath;\n  }\n\n  public getReportePantallaOmega(): Observable<ReportePantallaOmega> {\n    return this.globalService.get(`${this.restUrl}/reporteOmega`, mapPantalla).catch((error: any) => {\n      if (error.status === 0) {\n        this.authService.logout();\n      }\n    });\n  }\n\n  public getPropiedadesMonitor(): Observable<PropiedadesMonitorOmega> {\n    return this.globalService.get(`${this.restUrl}/propiedadesOmega`, mapPropiedades);\n  }\n\n  public actualizaPropiedadesMonitor(data: PropiedadesMonitorOmega) {\n    return this.globalService.post(`${this.restUrl}/propiedadesOmega`, data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/monitor-omega.service.ts","module.exports = \".thread-type-alert {\\r\\n  background-color: red !important;\\r\\n  color: white !important;\\r\\n}\\r\\n\\r\\n.thread-type-ignore {\\r\\n  background-color: darkgray !important;\\r\\n  color: black !important;\\r\\n}\\r\\n\\r\\np-spinner#intervaloRefrescado, #umbralAlertas, #maximoCpu {\\r\\n  padding-left: 1px;\\r\\n  padding-top: 1px;\\r\\n  padding-right: 1px;\\r\\n  padding-bottom: 1px;\\r\\n  width: 0px;\\r\\n  color: transparent !important;\\r\\n  border-color: transparent !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/monitor-omega/monitor-omega/monitor-omega.component.css\n// module id = ./src/app/monitor-omega/monitor-omega/monitor-omega.component.css\n// module chunks = monitor-omega.module","module.exports = \"<div class=\\\"page-header\\\">\\n  <h1>Monitoreo Omegamon II for DB2.</h1>\\n  <p>Muestra las transacciones CICS del Omegamon II for DB2.</p>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label>&Uacute;ltima Actualizaci&oacute;n</label>\\n      <simple-help [ayuda]=\\\"ayudaFecha\\\"></simple-help>\\n      <p id=\\\"lastUpdate\\\"></p>\\n    </div>\\n\\n    <div class=\\\"col-md-2\\\">\\n      <label>Estado del Monitor</label>\\n      <simple-help [ayuda]=\\\"ayudaMonitorOn\\\"></simple-help>\\n      <p id=\\\"monitorOn\\\"></p>\\n    </div>\\n\\n    <div class=\\\"col-md-1\\\">\\n      <label>Alertas</label>\\n      <simple-help [ayuda]=\\\"ayudaAlertas\\\"></simple-help>\\n      <p id=\\\"alertsCount\\\"></p>\\n    </div>\\n\\n    <div class=\\\"col-md-2\\\">\\n      <label>Tiempo Refrescado</label>\\n      <simple-help [ayuda]=\\\"ayudaTiempo\\\"></simple-help>\\n      <p id=\\\"refreshRate\\\"></p>\\n    </div>\\n\\n    <div class=\\\"col-md-2\\\">\\n      <label>Umbral Tiempo</label>\\n      <simple-help [ayuda]=\\\"ayudaUmbral\\\"></simple-help>\\n      <p id=\\\"alertThreshold\\\"></p>\\n    </div>\\n\\n    <div class=\\\"col-md-2\\\">\\n      <label>Umbral CPU</label>\\n      <simple-help [ayuda]=\\\"ayudaMaxCpu\\\"></simple-help>\\n      <p id=\\\"maxCpu\\\"></p>\\n    </div>\\n\\n    <div class=\\\"col-md-1\\\">\\n      <button type=\\\"button\\\" class=\\\"ui-button-warning\\\" pTooltip=\\\"Editar Propiedades\\\" data-toggle=\\\"modal\\\" data-target=\\\"#adminMonitor\\\" (click)=\\\"clearPropiedades()\\\" tooltipPosition=\\\"left\\\" pButton icon=\\\"fa-pencil\\\" ></button>\\n      <simple-help [ayuda]=\\\"ayudaPropiedades\\\"></simple-help>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-11\\\"></div>\\n  <div class=\\\"col-md-1\\\">\\n    <button type=\\\"button\\\" class=\\\"ui-button-info\\\" pTooltip=\\\"Reordenar Por Alerta\\\" (click)=\\\"reordena()\\\" tooltipPosition=\\\"left\\\" pButton icon=\\\"fa-refresh\\\" ></button>\\n    <simple-help [ayuda]=\\\"ayudaReordenar\\\"></simple-help>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-2\\\">\\n    <label>CICS Omega</label>\\n    <image-help [ayuda]=\\\"ayudaTabla\\\"></image-help>\\n  </div>\\n  <div class=\\\"col-md-11\\\"></div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <table id=\\\"omegaTableCics\\\" class=\\\"display\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n      <thead>\\n        <tr>\\n          <th>CICS</th>\\n          <th>Total CPU</th>\\n          <th></th> <!-- alertRaised -->\\n        </tr>\\n      </thead>\\n    </table>\\n\\n  </div>\\n</div>\\n\\n<br/>\\n<br/>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-2\\\">\\n    <label>Transacciones Omega</label>\\n    <image-help [ayuda]=\\\"ayudaTabla\\\"></image-help>\\n  </div>\\n  <div class=\\\"col-md-11\\\"></div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <table id=\\\"omegaTable\\\" class=\\\"display\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n      <thead>\\n        <tr>\\n          <th>CICS</th>\\n          <th>Regi&oacute;n</th>\\n          <th>Programa</th>\\n          <th>Transacci&oacute;n</th>\\n          <th>Pantalla M2k</th>\\n          <th>Tiempo</th>\\n          <th>CPU</th>\\n          <th>Estatus</th>\\n          <th></th> <!-- threadType -->\\n          <th></th> <!-- tiempoNum -->\\n        </tr>\\n      </thead>\\n    </table>\\n\\n  </div>\\n</div>\\n\\n<!-- Modal Administracion Monitor -->\\n<div class=\\\"modal fade\\\" id=\\\"adminMonitor\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"adminMonitorLabel\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n          <form #form=\\\"ngForm\\\" novalidate >\\n              <div class=\\\"modal-header\\\">\\n                  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n                  <h4 class=\\\"modal-title\\\" id=\\\"adminMonitorLabel\\\">Administrar Monitor</h4>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col-md-12\\\">\\n                      <label>Refrescado de Datos (de 3 a 15 minutos)</label>\\n                      <p-spinner id=\\\"intervaloRefrescado\\\" class=\\\"form-control\\\" name=\\\"intervaloRefrescado\\\" required [(ngModel)]=\\\"propiedadesUser.intervaloRefrescado\\\" [step]=\\\"1\\\" [min]=\\\"3\\\" [max]=\\\"15\\\" placeholder=\\\"Ej. 3\\\"></p-spinner>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col-md-12\\\">\\n                      <label>Umbral de Tiempo (de 5.0 a 15.0 segundos)</label>\\n                      <p-spinner id=\\\"umbralAlertas\\\" class=\\\"form-control\\\" name=\\\"umbralAlertas\\\" required [(ngModel)]=\\\"propiedadesUser.umbralAlertas\\\" [step]=\\\"0.1\\\" [min]=\\\"5.0\\\" [max]=\\\"15.0\\\" placeholder=\\\"Ej. 5.0\\\"></p-spinner>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col-md-12\\\">\\n                      <label>Umbral de CPU (de 30.0 a 95.0 segundos)</label>\\n                      <p-spinner id=\\\"maximoCpu\\\" class=\\\"form-control\\\" name=\\\"maximoCpu\\\" required [(ngModel)]=\\\"propiedadesUser.maxCpu\\\" [step]=\\\"0.1\\\" [min]=\\\"30.0\\\" [max]=\\\"95.0\\\" placeholder=\\\"Ej. 30.0\\\"></p-spinner>\\n                    </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"clearPropiedades()\\\">Cancelar</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"savePropiedades()\\\" [disabled]=\\\"!form.valid\\\">Guardar</button>\\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/monitor-omega/monitor-omega/monitor-omega.component.html\n// module id = ./src/app/monitor-omega/monitor-omega/monitor-omega.component.html\n// module chunks = monitor-omega.module","import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MonitorOmegaService} from '../monitor-omega.service';\nimport { ReportePantallaOmega } from '../model/ReportePantallaOmega';\nimport { PropiedadesMonitorOmega } from '../model/PropiedadesMonitorOmega';\nimport { endpointServer } from '../../../environments/environment';\nimport { AlertService } from '../../alert.service';\nimport { SimpleHelp } from '../../help/model/SimpleHelpModel';\nimport { ImageHelp } from '../../help/model/ImageHelpModel';\nimport { connect, disconnect, initData, resetDTOrder, startTimer } from '../scripts/dataTableFunctions';\n\ndeclare let jQuery: any;\n\n// Llama a la desconexion antes de quitar la pagina (F5)\n$(window).on('beforeunload', function(){\n  disconnect();\n});\n\n@Component({\n  selector: 'app-monitor-omega',\n  templateUrl: './monitor-omega.component.html',\n  styleUrls: ['./monitor-omega.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MonitorOmegaComponent implements OnInit, OnDestroy {\n\n  private baseUrl: string = endpointServer.basePath;\n  private reportePantallaOmega: ReportePantallaOmega;\n  private helpAssets = 'assets/images/help';\n  public isAdmin = false;\n  public propiedadesUser = PropiedadesMonitorOmega.getNewInstance();\n  public propiedades = PropiedadesMonitorOmega.getNewInstance();\n  public ayudaFecha: SimpleHelp;\n  public ayudaAlertas: SimpleHelp;\n  public ayudaTiempo: SimpleHelp;\n  public ayudaUmbral: SimpleHelp;\n  public ayudaPropiedades: SimpleHelp;\n  public ayudaReordenar: SimpleHelp;\n  public ayudaTabla: ImageHelp;\n  public ayudaMonitorOn: SimpleHelp;\n  public ayudaMaxCpu: SimpleHelp;\n\n  constructor(private service: MonitorOmegaService,\n    private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.baseUrl = this.service.getEndPoint();\n    this.cargarAyuda();\n    this.refrescaDatos();\n    startTimer();\n  }\n\n  ngOnDestroy() {\n    disconnect();\n  }\n\n  public clearPropiedades() {\n    this.service.getPropiedadesMonitor().subscribe((p) => {\n      this.propiedades = p;\n      this.propiedadesUser = new PropiedadesMonitorOmega(\n        this.propiedades.intervaloRefrescado,\n        this.propiedades.umbralAlertas,\n        this.propiedades.monitorOn,\n        this.propiedades.correosAlerta,\n        this.propiedades.correosAlertaError,\n        this.propiedades.maxCpu);\n    });\n  }\n\n  public savePropiedades() {\n    this.service.actualizaPropiedadesMonitor(this.propiedadesUser).subscribe((p) => {\n      if (p.status === 200) {\n        this.refrescaDatos();\n        this.alertService.push({severity: 'info', summary: 'Actualizado', detail: 'Propiedades actualizadas'});\n      } else {\n        this.alertService.push({severity: 'error', summary: 'Sin Actualizar', detail: 'Ocurrio un error al actualizar las propiedades'});\n      }\n    });\n    jQuery('#adminMonitor').modal('hide');\n  }\n\n  public reordena() {\n    resetDTOrder();\n  }\n\n  private cargarAyuda() {\n    this.ayudaFecha = new SimpleHelp('Última Actualizacion',\n      'Fecha y hora de la última actualización de los datos de Omega');\n    this.ayudaAlertas = new SimpleHelp('Alertas', 'Alertas registradas en la última actualización');\n    this.ayudaTiempo = new SimpleHelp('Tiempo Refrescado', 'Tiempo de intervalo del refrescado de datos de Omega');\n    this.ayudaUmbral = new SimpleHelp('Umbral Tiempo', 'Tiempo que una transacción de Omega debe durar para ser considerada como alerta');\n    this.ayudaPropiedades = new SimpleHelp('Editar Propiedades', 'Permite editar el tiempo de refrescado y el umbral de alertas');\n    this.ayudaReordenar = new SimpleHelp('Reordenar Datos',\n      'Reordena la tabla mostrando las transacciones de alerta, normales y las ignoradas respectivamente');\n    this.ayudaTabla = new ImageHelp(\n      `${this.helpAssets}/monitor-omega-help_tabla.png`,\n      'Colores usados para identificar las transacciones alertadas (rebasa umbral de alertas), ' +\n        'normales e ignoradas (tiempos altos son normales)',\n      'Ayuda Tabla Omega');\n    this.ayudaMonitorOn = new SimpleHelp('Estado del Monitor', 'Estado en el que se encuentra el monitor (Encendido/Apagado)');\n    this.ayudaMaxCpu = new SimpleHelp('Umbral CPU', 'Porcentaje máximo permitido del CPU antes de ser considerado como alerta');\n  }\n\n  private refrescaDatos() {\n    this.service.getReportePantallaOmega().subscribe((p) => {\n      this.reportePantallaOmega = p;\n      if (this.reportePantallaOmega) {\n        initData(this.reportePantallaOmega);\n        connect(this.baseUrl);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/monitor-omega/monitor-omega.component.ts","import { ReportePantallaOmega } from '../model/ReportePantallaOmega';\r\nimport { Cics } from '../model/Cics';\r\nimport { CicsThread } from '../model/CicsThread';\r\nimport { OmegaData } from '../model/OmegaData';\r\n\r\ndeclare let SockJS;\r\ndeclare let Stomp;\r\ndeclare let jQuery: any;\r\n\r\nlet stompClient: any = null;\r\nlet data: any = null;\r\nlet timer: any = null;\r\n\r\n// Reinicia las variables globales a NULL\r\nfunction resetAll() {\r\n  stompClient = null;\r\n  data = null;\r\n  timer = null;\r\n}\r\n\r\n// Da formato en dd/MM/yyyy HH:mm:ss\r\nfunction getDateFormat(date: Date): string {\r\n  let formatString = '';\r\n  let dateString = date.toLocaleDateString();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  let seconds = date.getSeconds();\r\n\r\n  formatString = dateString + ' ' +\r\n    (hours < 10 ? '0' + hours : hours) + ':' +\r\n    (minutes < 10 ? '0' + minutes : minutes) + ':' +\r\n    (seconds < 10 ? '0' + seconds : seconds);\r\n\r\n  return formatString;\r\n}\r\n\r\n// Cambia el lenguaje de DataTable\r\nfunction getDTLanguage() {\r\n  return {\r\n    'decimal':        '',\r\n    'emptyTable':     'No hay información disponible',\r\n    'info':           'Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros',\r\n    'infoEmpty':      'Mostrando registros del 0 al 0 de un total de 0 registros',\r\n    'infoFiltered':   '(filtrado de un total de _MAX_ registros)',\r\n    'infoPostFix':    '',\r\n    'thousands':      ',',\r\n    'lengthMenu':     'Mostrar _MENU_ registros',\r\n    'loadingRecords': 'Cargando...',\r\n    'processing':     'Procesando...',\r\n    'search':         'Buscar:',\r\n    'zeroRecords':    'No se encontraron registros',\r\n    'paginate': {\r\n        'first':      'Primero',\r\n        'last':       'Último',\r\n        'next':       'Siguiente',\r\n        'previous':   'Anterior'\r\n    },\r\n    'aria': {\r\n        'sortAscending':  ': Activar para ordenar la columna de manera ascendente',\r\n        'sortDescending': ': Activar para ordenar la columna de manera descendente'\r\n    }\r\n  };\r\n}\r\n\r\nfunction getDTFormatCics(cicsList: Cics[]) {\r\n  let arrTab = [];\r\n  cicsList.map((p) => {\r\n    arrTab.push({\r\n      cics: p.jobName,\r\n      totalCpu: getCpuNumber(p.totalCpu),\r\n      alertRaised: p.alertRaised\r\n    });\r\n  });\r\n  return arrTab;\r\n}\r\n\r\n// Da el formato correcto a la informacion para el DataTable\r\nfunction getDTFormatCicsThread(cicsThreadList: CicsThread[]) {\r\n  let arrTab = [];\r\n  cicsThreadList.map((r) => {\r\n    arrTab.push({\r\n      cics: r.jobName,\r\n      region: r.region,\r\n      programa: r.planName,\r\n      transaccion: r.transaccion,\r\n      tiempo: r.elapsed.replace(/[a-z||A-Z||*]/g, ''),\r\n      cpu: getCpuNumber(r.cpu),\r\n      estatus: r.status,\r\n      threadType: r.threadType,\r\n      tiempoNum: r.elapsedTime,\r\n      pantallaM2k: r.pantallaM2k\r\n    });\r\n  });\r\n  return arrTab;\r\n}\r\n\r\nfunction getCpuNumber(cpu: string) {\r\n  if (cpu) {\r\n    let cpuNum = Number.parseFloat(cpu.replace('%', ''));\r\n    if (isNaN(cpuNum)) {\r\n      return -1.0;\r\n    }\r\n    return cpuNum;\r\n  }\r\n  return -1.0;\r\n}\r\n\r\n// Realiza la conexion al servidor por medio de SockJS\r\nexport function connect(baseUrl: string) {\r\n  let socket = new SockJS(baseUrl + '/pantallaOmega');\r\n  stompClient = Stomp.over(socket);\r\n  stompClient.debug = () => {}; // para inhabilitar la impresion en consola de los datos recibidos\r\n  stompClient.connect({}, function(frame) {\r\n    stompClient.subscribe('/topic/pantallaOmega', function(pantallaOmega){\r\n      if (pantallaOmega) {\r\n        reloadData(pantallaOmega);\r\n        }\r\n    });\r\n  });\r\n}\r\n\r\n// Desconecta el SockJS y elimina el Interval\r\nexport function disconnect() {\r\n  if (stompClient != null) {\r\n      stompClient.disconnect();\r\n  }\r\n  clearInterval(timer);\r\n  resetAll();\r\n}\r\n\r\n// Metodo que llama al servidor para obtener nueva informacion del monitor Omega\r\nfunction getData() {\r\n  if (stompClient != null) {\r\n    stompClient.send('/app/pantallaOmega', {}, JSON.stringify({ 'message': 'test' }));\r\n  }\r\n}\r\n\r\n// Verifica si la informacion obtenida es nueva\r\nfunction reloadData(pantallaOmega) {\r\n  let jsonPantalla: ReportePantallaOmega = JSON.parse(pantallaOmega.body);\r\n  if (data.lastUpdate !== jsonPantalla.lastUpdate) {\r\n    data = jsonPantalla;\r\n    if (!jsonPantalla.omegaData) {\r\n      jsonPantalla.omegaData = OmegaData.getNewInstance();\r\n    }\r\n    fillData(jsonPantalla);\r\n  }\r\n}\r\n\r\n// Llena la informacion en los campos HTML correspondientes\r\nfunction fillData(reportePantallaOmega: ReportePantallaOmega) {\r\n  $('#lastUpdate').html(getDateFormat(new Date(reportePantallaOmega.lastUpdate)));\r\n  $('#alertsCount').html('' + reportePantallaOmega.alertsCount);\r\n  $('#refreshRate').html(reportePantallaOmega.propiedadesMonitorOmega.intervaloRefrescado + ' minutos');\r\n  $('#alertThreshold').html(reportePantallaOmega.propiedadesMonitorOmega.umbralAlertas + ' segundos');\r\n  $('#monitorOn').html(reportePantallaOmega.propiedadesMonitorOmega.monitorOn ? 'Encendido' : 'Apagado');\r\n  $('#maxCpu').html(reportePantallaOmega.propiedadesMonitorOmega.maxCpu + '%');\r\n  (<any>$('#omegaTableCics')).dataTable().fnDestroy();\r\n  (<any>$('#omegaTable')).dataTable().fnDestroy();\r\n  reloadTableCics(getDTFormatCics(reportePantallaOmega.omegaData.listCics));\r\n  reloadTableCicsThread(getDTFormatCicsThread(reportePantallaOmega.omegaData.listCicsThread));\r\n}\r\n\r\nfunction reloadTableCics(dtData: any) {\r\n  (<any>$('#omegaTableCics')).dataTable({\r\n    'language': getDTLanguage(),\r\n    'paging': false,\r\n    'ordering': true,\r\n    'info': true,\r\n    'searching': false,\r\n    'autoWidth': true,\r\n    'pageLength': 1,\r\n    'data': dtData,\r\n    'columns': [\r\n      {'data': 'cics'},\r\n      {'data': 'totalCpu'},\r\n      {'data': 'alertRaised', 'visible': false, 'searchable': false}\r\n    ],\r\n    'columnDefs': [\r\n      {\r\n        'targets': '_all',\r\n        'createdCell': function(td, cellData, rowData, rowIndex, colIndex){\r\n          if (rowData.alertRaised) {\r\n            $(td).addClass('thread-type-alert');\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    'order': [[1, 'desc']],\r\n  });\r\n}\r\n\r\n// Recarga la informacion del DataTable\r\nfunction reloadTableCicsThread(dtData: any) {\r\n  (<any>$('#omegaTable')).dataTable({\r\n    'language': getDTLanguage(),\r\n    'paging': true,\r\n    'ordering': true,\r\n    'info': true,\r\n    'searching': true,\r\n    'autoWidth': true,\r\n    'pageLength': 10,\r\n    'data': dtData,\r\n    'columns': [\r\n      {'data': 'cics'}, // CICS\r\n      {'data': 'region'}, // region\r\n      {'data': 'programa'}, // programa\r\n      {'data': 'transaccion'}, // transaccion\r\n      {'data': 'pantallaM2k'}, // pantalla m2k\r\n      {'data': 'tiempo', 'orderData': [9]}, // tiempo ejecucion\r\n      {'data': 'cpu'}, // cpu\r\n      {'data': 'estatus'}, // estatus\r\n      {'data': 'threadType', 'visible': false, 'searchable': false},\r\n      {'data': 'tiempoNum', 'visible': false, 'searchable': false}\r\n    ],\r\n    'columnDefs': [\r\n      {\r\n        'targets': '_all',\r\n        'createdCell': function(td, cellData, rowData, rowIndex, colIndex){\r\n          switch (rowData.threadType) {\r\n            case -1: $(td).addClass('thread-type-ignore'); break;\r\n            case 1: $(td).addClass('thread-type-alert'); break;\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    'order': [[8, 'desc'], [0, 'asc']],\r\n  });\r\n}\r\n\r\n// Inicia la informacion del monitor Omega\r\nexport function initData(reportePantallaOmega: ReportePantallaOmega) {\r\n  data = reportePantallaOmega;\r\n  fillData(data);\r\n}\r\n\r\n// Reinicia el orden del DataTable\r\nexport function resetDTOrder() {\r\n  (<any>$('#omegaTableCics')).dataTable().fnSort([[1, 'desc']]);\r\n  (<any>$('#omegaTableCics')).dataTable().fnDraw();\r\n  (<any>$('#omegaTable')).dataTable().fnSort([[7, 'desc'], [0, 'asc']]);\r\n  (<any>$('#omegaTable')).dataTable().fnDraw();\r\n}\r\n\r\n// Inicia el intervalo, llama al metodo getData() cada N millisegundos\r\nexport function startTimer() {\r\n  $(function() {\r\n    timer = setInterval(function() {\r\n      getData();\r\n    }, 15000); // millisegundos\r\n  });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/monitor-omega/scripts/dataTableFunctions.ts"],"sourceRoot":"webpack:///"}